{
	"dataStructures": {
		"project": "IPFS",
		"title": "Decentralized data structures",
		"description": "The decentralized web relies on unique data structures and linking strategies. Learn about the benefits of hashing, content addressing, DAG and Merkle Trees!",
		"lessons": [
			{ "to": "/data-structures/01", "name": "Data structures" },
			{ "to": "/data-structures/02", "name": "The centralized web: Location-based addressing" },
			{ "to": "/data-structures/03", "name": "The decentralized web: Content addressing" },
			{ "to": "/data-structures/04", "name": "Cryptographic hashing and Content Identifiers (CIDs)" },
			{ "to": "/data-structures/05", "name": "Merkle trees and directed acyclic graphs (DAG)" }
		]
	},
	"basics": {
		"project": "IPFS",
		"title": "P2P data links with content addressing",
		"description": "Store, fetch, and create verifiable links between peer-hosted datasets with IPFS and CIDs. Itâ€™s graphs with friends!",
		"lessons": [
			{ "to": "/basics/01", "name": "Create a node and return a Content Identifier (CID)"},
			{ "to": "/basics/02", "name": "Create a new node that's linked to an old one" },
			{ "to": "/basics/03", "name": "Read nested data using link" }
		]
	},
	"blog": {
		"project": "IPFS",
		"title": "Blogging on the Decentralized Web",
		"description": "Cool content addresses don't change.",
		"lessons": [
			{ "to": "/blog/01", "name": "Link an author to a blog post using its CID" },
			{ "to": "/blog/02", "name": "Update posts with tags and watch their CIDs change" },
			{ "to": "/blog/03", "name": "Build a tag cloud with arrays of links" },
			{ "to": "/blog/04", "name": "Add a new blog post linked to an author and tags" },
			{ "to": "/blog/05", "name": "Add a new tag linked to multiple blog posts" },
			{ "to": "/blog/06", "name": "List posts chronologically with a chain of links" },
			{ "to": "/blog/07", "name": "Traverse through all posts, starting with the most recent" }
		]
	},
	"mutableFileSystem": {
		"project": "IPFS",
		"title": "IPFS: Mutable File System",
		"description": "All data in IPFS is content-addressed and immutable, but the Mutable File System (MFS) lets you work with files and directories as though you were using a traditional name-based file system.",
		"lessons": [
			{ "to": "/mutable-file-system/01", "name": "Introducing IPFS" },
			{ "to": "/mutable-file-system/02", "name": "Check the status of a directory" },
			{ "to": "/mutable-file-system/03", "name": "Working with files in ProtoSchool" },
			{ "to": "/mutable-file-system/04", "name": "Add a file to MFS" },
			{ "to": "/mutable-file-system/05", "name": "View the contents of a directory" },
			{ "to": "/mutable-file-system/06", "name": "See how CIDs change as data changes" },
			{ "to": "/mutable-file-system/07", "name": "Create a directory" },
			{ "to": "/mutable-file-system/08", "name": "Move a file or directory" },
			{ "to": "/mutable-file-system/09", "name": "Copy a file or directory" },
			{ "to": "/mutable-file-system/10", "name": "Read the contents of a file" },
			{ "to": "/mutable-file-system/11", "name": "Remove a file or directory" }
		]
	}
}
